import{j as e}from"./index-KIWeJkvA.js";function n(){return e.jsxs(e.Fragment,{children:[e.jsx("title",{children:"XeniApp : XENI API: Cruise data."}),e.jsx("link",{rel:"stylesheet",href:"styles/site.css",type:"text/css"}),e.jsx("meta",{httpEquiv:"Content-Type",content:"text/html; charset=UTF-8"}),e.jsxs("div",{id:"page",children:[e.jsxs("div",{id:"main",className:"aui-page-panel",children:[e.jsxs("div",{id:"main-header",children:[e.jsx("div",{id:"breadcrumb-section",children:e.jsxs("ol",{id:"breadcrumbs",children:[e.jsx("li",{className:"first",children:e.jsx("span",{children:e.jsx("a",{href:"index.html",children:"XeniApp"})})}),e.jsx("li",{children:e.jsx("span",{children:e.jsx("a",{href:"XeniApp_542179373.html",children:"XeniApp"})})}),e.jsx("li",{children:e.jsx("span",{children:e.jsx("a",{href:"Projects_583761921.html",children:"Projects"})})}),e.jsx("li",{children:e.jsx("span",{children:e.jsx("a",{href:"Cruises-Integration_601980932.html",children:"Cruises Integration"})})})]})}),e.jsx("h1",{id:"title-heading",className:"pagetitle",children:e.jsx("span",{id:"title-text",children:"XeniApp : XENI API: Cruise data."})})]}),e.jsxs("div",{id:"content",className:"view",children:[e.jsxs("div",{className:"page-metadata",children:["Created by ",e.jsx("span",{className:"author",children:" Gerardo Nizetich"}),", last modified on Feb 15, 2024"]}),e.jsxs("div",{id:"main-content",className:"wiki-content group",children:[e.jsx("hr",{}),e.jsx("h1",{id:"XENIAPI:Cruisedata.-Functionalproposal",children:"Functional proposal"}),e.jsxs("p",{children:["Offer from XENI API a set of endpoints to get the Cruise data for hydrate UI and in the future to expose to our consumers. ",e.jsx("br",{}),e.jsx("br",{})]}),e.jsx("h2",{id:"XENIAPI:Cruisedata.-Scope",children:"Scope"}),e.jsxs("p",{children:["Based on the idea to get the static data from VendorÂ´s API here:"," ",e.jsx("a",{href:"Cache-cruise-Ship-data._607485953.html","data-linked-resource-id":607485953,"data-linked-resource-version":5,"data-linked-resource-type":"page",children:"Cache cruise Ship data."})," ","plus, more content when we start working with this product like for example:",e.jsx("br",{}),"Itineraries",e.jsx("br",{}),"Cabin Categories",e.jsx("br",{}),"Images",e.jsx("br",{}),"Sailing dates offers (This is new and it is related to other endpoints in the API)."]}),e.jsxs("p",{children:["Then create API endpoints in XENI to consume the static data and reduce the number of requests to the vendor, standardize the process, and only take care of the dynamic data."," "]}),e.jsx("p",{children:"The risk is to generate much consumption of vendor endpoint at the beginning of the process to store the data and reach the limits and quota, but, then it will be drastic reduce."}),e.jsx("p",{}),e.jsx("h2",{id:"XENIAPI:Cruisedata.-Whatdatawecancapture",children:"What data we can capture "}),e.jsxs("p",{children:["Staring for the itineraries of a selected offer in the UI. ",e.jsx("br",{}),"The method that will return the itinerary details take over 12s to resolve. This will affect our performance for Xeni consumers and it is not related to our product directly. ",e.jsx("br",{})]}),e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("p",{children:"I propose to cache and assign an Id to each itinerary of a Ship, (Compares the Portnames object with the Itinerary points stored to resolve in the first search the itinerary of the selected ship.)"})}),e.jsx("li",{children:e.jsx("p",{children:"Store the Reference cabin Category for Ships based on Grade. (Using the static data for images)."})}),e.jsx("li",{children:e.jsx("p",{children:"Decks and decks plan by shipId"})}),e.jsx("li",{children:e.jsxs("p",{children:["Store maps for Reference port points. ",e.jsx("br",{})]})})]}),e.jsx("hr",{}),e.jsx("h2",{id:"XENIAPI:Cruisedata.-SuggestedAPIS",children:"Suggested APIS"}),e.jsxs("h3",{id:"XENIAPI:Cruisedata.-GetShipinformation",children:[e.jsx("br",{}),"Get Ship information"]}),e.jsx("p",{}),e.jsxs("p",{children:[e.jsx("strong",{children:"Method"}),": GET",e.jsx("br",{}),e.jsx("strong",{children:"Segment"}),": /cruise",e.jsx("br",{}),e.jsx("strong",{children:"Endpoint"}),": /information"]}),e.jsx("p",{}),e.jsxs("p",{children:[e.jsx("strong",{children:"Functionality"}),": Get the general cruise information based on cruiseID + shipID."]}),e.jsx("p",{children:"Draft payload"}),e.jsxs("div",{id:"expander-869428756",className:"expand-container",children:[e.jsxs("div",{id:"expander-control-869428756",className:"expand-control",children:[e.jsx("span",{className:"expand-control-icon",children:e.jsx("img",{style:{verticalAlign:"middle"},className:"expand-control-image",src:"images/icons/grey_arrow_down.png"})}),e.jsx("span",{className:"expand-control-text",children:"GET:/cruise/information - request"})]}),e.jsx("div",{id:"expander-content-869428756",className:"expand-content",children:e.jsx("div",{className:"code panel pdl",style:{borderWidth:1},children:e.jsx("div",{className:"codeContent panelContent pdl",children:e.jsxs("pre",{className:"syntaxhighlighter-pre","data-syntaxhighlighter-params":"brush: java; gutter: false; theme: Confluence","data-theme":"Confluence",children:["{",`
`,"  ",'"correlationId": "A unique identifier Id for transaction associated to sessionId",',`
`,"  ",'"cruiseLineId":"Id of the CruiseLine from Selected item in UI",',`
`,"  ",'"shipId":"ShipId selected from User"',`
`,"}"]})})})})]}),e.jsxs("div",{id:"expander-883965666",className:"expand-container",children:[e.jsxs("div",{id:"expander-control-883965666",className:"expand-control",children:[e.jsx("span",{className:"expand-control-icon",children:e.jsx("img",{style:{verticalAlign:"middle"},className:"expand-control-image",src:"images/icons/grey_arrow_down.png"})}),e.jsx("span",{className:"expand-control-text",children:"GET:/cruise/information - response"})]}),e.jsx("div",{id:"expander-content-883965666",className:"expand-content",children:e.jsx("div",{className:"code panel pdl",style:{borderWidth:1},children:e.jsx("div",{className:"codeContent panelContent pdl",children:e.jsxs("pre",{className:"syntaxhighlighter-pre","data-syntaxhighlighter-params":"brush: java; gutter: false; theme: Confluence","data-theme":"Confluence",children:["{",`
`,"  ",'"correlationId": "A unique identifier Id for transaction associated to sessionId",',`
`,"  ",'"cruiseline": ',"{",`
`,"    ",'"cruiseLineId": "",',`
`,"    ",'"name": "",',`
`,"    ",'"code": "",',`
`,"    ",'"images": ',"{","}",`
`,"  ","}",",",`
`,"  ",'"shipInformation": ',"{",`
`,"    ",'"Id": "",',`
`,"    ",'"Name": "",',`
`,"    ",'"Images": ',"{","}",",",`
`,"    ",'"tonage": "",',`
`,"    ",'"crew": "",',`
`,"    ",'"totalCapacity": "",',`
`,"    ",'"totalPassengers": ""',`
`,"  ","}",",",`
`,"  ",'"decks": ',"{","}",",",`
`,"  ",'"cabins": ',"{","}",",",`
`,"  ",'"facilities": [],',`
`,"  ",'"images":[]',`
`,"}"]})})})})]}),e.jsx("hr",{}),e.jsx("h3",{id:"XENIAPI:Cruisedata.-GetShipDecks",children:"Get Ship Decks"}),e.jsx("p",{}),e.jsx("hr",{}),e.jsx("h3",{id:"XENIAPI:Cruisedata.-GetShipimages",children:"Get Ship images"})]})]})," "]}),e.jsx("div",{id:"footer",role:"contentinfo",children:e.jsxs("section",{className:"footer-body",children:[e.jsx("p",{children:"Document generated by Confluence on Jun 24, 2024 05:26"}),e.jsx("div",{id:"footer-logo",children:e.jsx("a",{href:"http://www.atlassian.com/",children:"Atlassian"})})]})})]})]})}export{n as default};
